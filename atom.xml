<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yoler</title>
  <subtitle>你说向前看 毕竟将来重要</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-20T10:19:19.377Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yoler|雷永亮</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>写在年末</title>
    <link href="http://yoursite.com/2017/01/20/%E5%86%99%E5%9C%A8%E5%B9%B4%E6%9C%AB/"/>
    <id>http://yoursite.com/2017/01/20/写在年末/</id>
    <published>2017-01-20T09:08:16.000Z</published>
    <updated>2017-01-20T10:19:19.377Z</updated>
    
    <content type="html"><![CDATA[<p>时光飞逝  当我提笔时已是快要离开的时候了<br>离下班还有12分钟 看了一眼窗外<br>黄昏的夕阳在天边留下一片红晕的晚霞<br>远处的高楼大厦泛着金黄的光<br>惬意 安详</p>
<p>我很感谢我能来到亿图<br>一家不是很大的公司<br>我清楚的记得当我刚去的时候<br>连一个表单页面都写的很艰难<br>不知道什么是API<br>什么是AJAX<br>……<br>所以我就默默的努力<br>其他人六点多就走了<br>我熬到七点<br>老板说<br>走吧<br>明天再来做</p>
<p>在这里<br>我感到很自由<br>没有迟到<br>没有强制加班<br>更多的是自我约束<br>还有好多好多随便吃的零食<br>还有一群可爱友好的小伙伴</p>
<p>有时候遇到难题也会困扰好久<br>思考着 思考着 天就黑了<br>又一天就结束了<br>google还显示着翻阅的资料<br>github又多了一个版本记录</p>
<p>这一年<br>我有成长<br>但是不够努力</p>
<p>还有好多坏习惯没改正<br>其中<br>拖延症是最严重的</p>
<p>呵呵<br>上学时将自己的签名写为<br>雷厉风行 永不言弃 亮丽一生</p>
<p>现在真是惭愧啊</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时光飞逝  当我提笔时已是快要离开的时候了&lt;br&gt;离下班还有12分钟 看了一眼窗外&lt;br&gt;黄昏的夕阳在天边留下一片红晕的晚霞&lt;br&gt;远处的高楼大厦泛着金黄的光&lt;br&gt;惬意 安详&lt;/p&gt;
&lt;p&gt;我很感谢我能来到亿图&lt;br&gt;一家不是很大的公司&lt;br&gt;我清楚的记得当我刚去的时候&lt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>flex布局总结</title>
    <link href="http://yoursite.com/2017/01/17/flex%E5%B8%83%E5%B1%80%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/01/17/flex布局总结/</id>
    <published>2017-01-17T06:47:19.000Z</published>
    <updated>2017-01-19T08:22:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box&#123;</div><div class="line">    display: flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>行内元素也可以使用Flex布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box&#123;</div><div class="line">    display: inline-flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意，设为Flex布局以后，子元素的<font color="red">float、clear</font>和<font color="red">vertical-align</font>属性将失效。</p>
<hr>
<p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</p>
<p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。<br>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p>
<p>容器有如下6个属性：<br>1.flex-direction：属性决定主轴的方向（即项目的排列方向）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">    flex-direction: row | row-reverse | column | column-reverse;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>有如下四个值:</p>
<ul>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li>row-reverse：主轴为水平方向，起点在右端。</li>
<li>column：主轴为垂直方向，起点在上沿。</li>
<li>column-reverse：主轴为垂直方向，起点在下沿。</li>
</ul>
<p>2.flex-wrap: 默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box&#123;</div><div class="line">    flex-wrap: nowrap | wrap | wrap-reverse;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>它可能取三个值:</p>
<ul>
<li>nowrap（默认）：不换行。</li>
<li>wrap：换行，第一行在上方。</li>
<li>wrap-reverse：换行，第一行在下方。</li>
</ul>
<p>3.flex-flow: 该属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">    flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>4.justify-content: 该属性定义了项目在主轴上的对齐方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">    justify-content: flex-start | flex-end | center | space-between | space-around;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右:</p>
<ul>
<li>flex-start（默认值）：左对齐</li>
<li>flex-end：右对齐</li>
<li>center： 居中</li>
<li>space-between：两端对齐，项目之间的间隔都相等。</li>
<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
<p>5.align-items: 该属性定义项目在交叉轴上如何对齐。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">    align-items: flex-start | flex-end | center | baseline | stretch;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下:</p>
<ul>
<li>flex-start：交叉轴的起点对齐。</li>
<li>flex-end：交叉轴的终点对齐。</li>
<li>center：交叉轴的中点对齐。</li>
<li>baseline: 项目的第一行文字的基线对齐。</li>
<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>
<p>6.align-content: 该属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">    align-content: flex-start | flex-end | center | space-between | space-around | stretch;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>该属性可能取6个值:</p>
<ul>
<li>flex-start：与交叉轴的起点对齐。</li>
<li>flex-end：与交叉轴的终点对齐。</li>
<li>center：与交叉轴的中点对齐。</li>
<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li>stretch（默认值）：轴线占满整个交叉轴。</li>
</ul>
<hr>
<p>项目的属性,以下6个属性设置在项目上:<br>1.order: 定义项目的排列顺序。数值越小，排列越靠前，默认为0。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    order: &lt;integer&gt;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>2.flex-grow: 定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    flex-grow: &lt;number&gt;; /* default 0 */</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>3.flex-shrink: 定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    flex-shrink: &lt;number&gt;; /* default 1 */</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。<br>负值对该属性无效。</p>
<p>4.flex-basis: 定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    flex-basis: &lt;length&gt; | auto; /* default auto */</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>5.flex: 该属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    flex: none | [ &lt;&apos;flex-grow&apos;&gt; &lt;&apos;flex-shrink&apos;&gt;? || &lt;&apos;flex-basis&apos;&gt; ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>
<p>6.align-self: 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.item &#123;</div><div class="line">    align-self: auto | flex-start | flex-end | center | baseline | stretch;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>初笔</title>
    <link href="http://yoursite.com/2017/01/16/%E5%88%9D%E7%AC%94/"/>
    <id>http://yoursite.com/2017/01/16/初笔/</id>
    <published>2017-01-16T05:42:38.000Z</published>
    <updated>2017-01-16T10:23:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前 总想有一个属于自己的网站<br>用自己的名字来命名</p>
<p>写一些个人简介<br>写一写生活杂谈</p>
<p>终于<br>今天搭建了自己的专属博客<br>以后生活的点点滴滴都将呈现在这里</p>
<p>或许<br>写着 写着<br>我就会变成一个作家<br>这也是不错的</p>
<p>以前从没有写过学习笔记<br>不爱写<br>也没有地方写<br>csdn的博客太丑<br>作为一个前端开发工程师<br>对美观的要求是极致的<br>这个主题还暂算满意</p>
<p>成长的过程中需要不断的积累<br>人说<br>好记性 不如烂笔头<br>此刻<br>我是绚烂的</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前 总想有一个属于自己的网站&lt;br&gt;用自己的名字来命名&lt;/p&gt;
&lt;p&gt;写一些个人简介&lt;br&gt;写一写生活杂谈&lt;/p&gt;
&lt;p&gt;终于&lt;br&gt;今天搭建了自己的专属博客&lt;br&gt;以后生活的点点滴滴都将呈现在这里&lt;/p&gt;
&lt;p&gt;或许&lt;br&gt;写着 写着&lt;br&gt;我就会变成一个作家&lt;br&gt;这
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
